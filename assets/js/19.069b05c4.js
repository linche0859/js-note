(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{377:function(r,t,e){r.exports=e.p+"assets/img/isp.566c896e.png"},447:function(r,t,e){"use strict";e.r(t);var a=e(42),s=Object(a.a)({},(function(){var r=this,t=r.$createElement,a=r._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"s-o-l-i-d"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#s-o-l-i-d"}},[r._v("#")]),r._v(" S.O.L.I.D")]),r._v(" "),a("h2",{attrs:{id:"spr-單一職責"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spr-單一職責"}},[r._v("#")]),r._v(" SPR - 單一職責")]),r._v(" "),a("BaseIframe",{attrs:{"url-id":"dyMVXej"}}),r._v(" "),a("h3",{attrs:{id:"參考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#參考"}},[r._v("#")]),r._v(" 參考")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/@f40507777/%E5%96%AE%E4%B8%80%E8%81%B7%E8%B2%AC%E5%8E%9F%E5%89%87-single-responsibility-principle-7b4eb03f1fff",target:"_blank",rel:"noopener noreferrer"}},[r._v("單一職責原則 Single Responsibility Principle (SRP)"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.javascriptc.com/3663.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("S.O.L.I.D 五大原则之单一职责 SRP"),a("OutboundLink")],1)]),r._v(" "),a("h2",{attrs:{id:"ocp-開放封閉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ocp-開放封閉"}},[r._v("#")]),r._v(" OCP - 開放封閉")]),r._v(" "),a("p",[r._v("Open for extension（對擴展開放）的意思是說當新需求出現的時候，可以通過擴展現有模型達到目的。")]),r._v(" "),a("p",[r._v("而 Close for modification（對修改關閉）的意思是說不允許對原先的實體做任何修改。")]),r._v(" "),a("p",[r._v("其實，就是這些需要執行多樣行為的實體，應該設計成不需要修改就可以實現各種的變化，堅持開閉原則有利於用最少的代碼進行項目維護。")]),r._v(" "),a("BaseIframe",{attrs:{"url-id":"poyWRPj"}}),r._v(" "),a("h3",{attrs:{id:"參考-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#參考-2"}},[r._v("#")]),r._v(" 參考")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/@f40507777/%E9%96%8B%E6%94%BE%E5%B0%81%E9%96%89%E5%8E%9F%E5%89%87-open-closed-principle-31d61f9d37a5",target:"_blank",rel:"noopener noreferrer"}},[r._v("開放封閉原則 Open-Closed Principle (OCP)"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.javascriptc.com/3664.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("S.O.L.I.D 五大原则之开闭原则 OCP"),a("OutboundLink")],1)]),r._v(" "),a("h2",{attrs:{id:"lsp-里氏替換原則"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lsp-里氏替換原則"}},[r._v("#")]),r._v(" LSP - 里氏替換原則")]),r._v(" "),a("p",[r._v("繼承的特性導致高耦合，子類別對於方法修改(Override, Overload) 必須依照父類別行為方向，否則會對整體的繼承體系照成破壞，會有產生 "),a("strong",[r._v("不可預測的行為")]),r._v(" 與 "),a("strong",[r._v("不好察覺 Bug")]),r._v("。")]),r._v(" "),a("p",[r._v("如果遵循後可以減少 Reuse 上的 Bug 並且擴展子類別以達到新增功能，對於 "),a("strong",[r._v("開放封閉原則(Open-Closed Principle)")]),r._v(" 來說可以安全的新增子類別。")]),r._v(" "),a("BaseIframe",{attrs:{"url-id":"vYGdVzE"}}),r._v(" "),a("p",[r._v("在這個範例中，很明顯地違反 LSP，因為 Square 的等邊長 "),a("strong",[r._v("行為")]),r._v(" 所以需要 override，違反了 Rectangle 不變性，導致 Square 不能替換成 Rectangle。")]),r._v(" "),a("h3",{attrs:{id:"繼承的目的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#繼承的目的"}},[r._v("#")]),r._v(" 繼承的目的？")]),r._v(" "),a("ol",[a("li",[r._v("Reuse Code：可以使用組合，將共同部分抽取出來，來代替繼承，若非得要繼承，就不能 override")]),r._v(" "),a("li",[r._v("為了多型：可以用抽象類別，避免父類別實作")])]),r._v(" "),a("h3",{attrs:{id:"參考-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#參考-3"}},[r._v("#")]),r._v(" 參考")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/@f40507777/%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8F%9B%E5%8E%9F%E5%89%87-liskov-substitution-principle-adc1650ada53",target:"_blank",rel:"noopener noreferrer"}},[r._v("里氏替換原則 Liskov Substitution Principle (LSP)"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("a",{attrs:{href:"https://www.javascriptc.com/3665.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("S.O.L.I.D 五大原则之里氏替换原则 LSP"),a("OutboundLink")],1)]),r._v(" "),a("h2",{attrs:{id:"isp-介面隔離原則"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#isp-介面隔離原則"}},[r._v("#")]),r._v(" ISP - 介面隔離原則")]),r._v(" "),a("h3",{attrs:{id:"沒有遵守的話會"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#沒有遵守的話會"}},[r._v("#")]),r._v(" 沒有遵守的話會？")]),r._v(" "),a("ol",[a("li",[a("p",[r._v("繼承或抽象類別：多餘的介面在子類別可能會有 "),a("strong",[r._v("空實作")]),r._v(" 會對使用方照成 "),a("strong",[r._v("不可預期的錯誤")])])]),r._v(" "),a("li",[a("p",[r._v("Compile："),a("strong",[r._v("未使用方法的變更")]),r._v(" 而帶來的變更，假設 A 類別有 BCD 方法，E 用了 B 其他人用了 C 或 D，假設為了 E 改變了 B 介面，這樣導致 C 跟 D 的使用者全部要重新 Compile")])])]),r._v(" "),a("h3",{attrs:{id:"解決方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解決方法"}},[r._v("#")]),r._v(" 解決方法")]),r._v(" "),a("ul",[a("li",[r._v("客製化介面：客制用戶的 Interface，只提供用到的，再利用 "),a("strong",[r._v("組合實作")])]),r._v(" "),a("li",[r._v("分割組合：將類別分割後，需要 reuse 實作地方在利用 "),a("strong",[r._v("組合方式")]),r._v(" 實現，這裡可以使用多重繼承或 Delegate 等等")])]),r._v(" "),a("hr"),r._v(" "),a("p",[a("img",{attrs:{src:e(377),alt:"isp"}})]),r._v(" "),a("p",{staticClass:"text-center"},[r._v("\n將介面操作拆分，利用多重繼承或協定繼承可以將 Screen UI 合併起來。\n")]),a("p",[a("BaseIframe",{attrs:{"url-id":"wvGyOPm"}})],1),a("h3",{attrs:{id:"參考-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#參考-4"}},[r._v("#")]),r._v(" 參考")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://medium.com/@f40507777/%E4%BB%8B%E9%9D%A2%E9%9A%94%E9%9B%A2%E5%8E%9F%E5%89%87-interface-segregation-principle-isp-6854c5b3b42c",target:"_blank",rel:"noopener noreferrer"}},[r._v("介面隔離原則 Interface Segregation Principle (ISP)"),a("OutboundLink")],1)])],1)}),[],!1,null,null,null);t.default=s.exports}}]);